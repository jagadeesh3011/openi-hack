{"ast":null,"code":"import { blockquote } from './blockquote.js';\nimport { hardBreak } from './break.js';\nimport { code } from './code.js';\nimport { strikethrough } from './delete.js';\nimport { emphasis } from './emphasis.js';\nimport { footnoteReference } from './footnote-reference.js';\nimport { heading } from './heading.js';\nimport { html } from './html.js';\nimport { imageReference } from './image-reference.js';\nimport { image } from './image.js';\nimport { inlineCode } from './inline-code.js';\nimport { linkReference } from './link-reference.js';\nimport { link } from './link.js';\nimport { listItem } from './list-item.js';\nimport { list } from './list.js';\nimport { paragraph } from './paragraph.js';\nimport { root } from './root.js';\nimport { strong } from './strong.js';\nimport { table } from './table.js';\nimport { tableRow } from './table-row.js';\nimport { tableCell } from './table-cell.js';\nimport { text } from './text.js';\nimport { thematicBreak } from './thematic-break.js';\n\n/**\n * Default handlers for nodes.\n *\n * @satisfies {import('../state.js').Handlers}\n */\nexport var handlers = {\n  blockquote: blockquote,\n  break: hardBreak,\n  code: code,\n  delete: strikethrough,\n  emphasis: emphasis,\n  footnoteReference: footnoteReference,\n  heading: heading,\n  html: html,\n  imageReference: imageReference,\n  image: image,\n  inlineCode: inlineCode,\n  linkReference: linkReference,\n  link: link,\n  listItem: listItem,\n  list: list,\n  paragraph: paragraph,\n  // @ts-expect-error: root is different, but hard to type.\n  root: root,\n  strong: strong,\n  table: table,\n  tableCell: tableCell,\n  tableRow: tableRow,\n  text: text,\n  thematicBreak: thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n};\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return undefined;\n}","map":{"version":3,"names":["blockquote","hardBreak","code","strikethrough","emphasis","footnoteReference","heading","html","imageReference","image","inlineCode","linkReference","link","listItem","list","paragraph","root","strong","table","tableRow","tableCell","text","thematicBreak","handlers","break","delete","toml","ignore","yaml","definition","footnoteDefinition","undefined"],"sources":["C:/Users/320209843/Documents/GitHub/openi-hack/node_modules/mdast-util-to-hast/lib/handlers/index.js"],"sourcesContent":["import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n *\n * @satisfies {import('../state.js').Handlers}\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  // @ts-expect-error: root is different, but hard to type.\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return undefined\n}\n"],"mappings":"AAAA,SAAQA,UAAU,QAAO,iBAAiB;AAC1C,SAAQC,SAAS,QAAO,YAAY;AACpC,SAAQC,IAAI,QAAO,WAAW;AAC9B,SAAQC,aAAa,QAAO,aAAa;AACzC,SAAQC,QAAQ,QAAO,eAAe;AACtC,SAAQC,iBAAiB,QAAO,yBAAyB;AACzD,SAAQC,OAAO,QAAO,cAAc;AACpC,SAAQC,IAAI,QAAO,WAAW;AAC9B,SAAQC,cAAc,QAAO,sBAAsB;AACnD,SAAQC,KAAK,QAAO,YAAY;AAChC,SAAQC,UAAU,QAAO,kBAAkB;AAC3C,SAAQC,aAAa,QAAO,qBAAqB;AACjD,SAAQC,IAAI,QAAO,WAAW;AAC9B,SAAQC,QAAQ,QAAO,gBAAgB;AACvC,SAAQC,IAAI,QAAO,WAAW;AAC9B,SAAQC,SAAS,QAAO,gBAAgB;AACxC,SAAQC,IAAI,QAAO,WAAW;AAC9B,SAAQC,MAAM,QAAO,aAAa;AAClC,SAAQC,KAAK,QAAO,YAAY;AAChC,SAAQC,QAAQ,QAAO,gBAAgB;AACvC,SAAQC,SAAS,QAAO,iBAAiB;AACzC,SAAQC,IAAI,QAAO,WAAW;AAC9B,SAAQC,aAAa,QAAO,qBAAqB;;AAEjD;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMC,QAAQ,GAAG;EACtBvB,UAAU,EAAVA,UAAU;EACVwB,KAAK,EAAEvB,SAAS;EAChBC,IAAI,EAAJA,IAAI;EACJuB,MAAM,EAAEtB,aAAa;EACrBC,QAAQ,EAARA,QAAQ;EACRC,iBAAiB,EAAjBA,iBAAiB;EACjBC,OAAO,EAAPA,OAAO;EACPC,IAAI,EAAJA,IAAI;EACJC,cAAc,EAAdA,cAAc;EACdC,KAAK,EAALA,KAAK;EACLC,UAAU,EAAVA,UAAU;EACVC,aAAa,EAAbA,aAAa;EACbC,IAAI,EAAJA,IAAI;EACJC,QAAQ,EAARA,QAAQ;EACRC,IAAI,EAAJA,IAAI;EACJC,SAAS,EAATA,SAAS;EACT;EACAC,IAAI,EAAJA,IAAI;EACJC,MAAM,EAANA,MAAM;EACNC,KAAK,EAALA,KAAK;EACLE,SAAS,EAATA,SAAS;EACTD,QAAQ,EAARA,QAAQ;EACRE,IAAI,EAAJA,IAAI;EACJC,aAAa,EAAbA,aAAa;EACbI,IAAI,EAAEC,MAAM;EACZC,IAAI,EAAED,MAAM;EACZE,UAAU,EAAEF,MAAM;EAClBG,kBAAkB,EAAEH;AACtB,CAAC;;AAED;AACA,SAASA,MAAMA,CAAA,EAAG;EAChB,OAAOI,SAAS;AAClB"},"metadata":{},"sourceType":"module","externalDependencies":[]}